name: Hourly uptime check

on:
  schedule:
    # Runs every 10 minutes (at minute 0 and 10 UTC)
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  check:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: üåê Check target status
        id: http
        run: |
          TARGET=$(jq -r .target status.json)
          # Follow redirects and capture final status code
          STATUS=$(curl -L -s -o /dev/null -w "%{http_code}" "$TARGET")
          echo "status=$STATUS" >> $GITHUB_OUTPUT

      - name: ‚öôÔ∏è Update uptime files
        run: |
          STATUS=${{ steps.http.outputs.status }}
          HOURS=$(jq '.hoursUp // 0' status.json)

          if [ "$STATUS" -ge 200 ] && [ "$STATUS" -lt 400 ]; then
            # Site is up ‚Üí increment counter
            HOURS=$((HOURS + 1))
          else
            # Site just went down ‚Üí record the completed uptime if >¬†0
            if [ "$HOURS" -gt 0 ]; then
              DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
              SECONDS=$((HOURS * 3600))
              jq --arg seconds "$SECONDS" --arg lastChecked "$DATE" \
                '. += [ { seconds: ($seconds|tonumber), lastChecked: $lastChecked } ]' \
                history.json > history.tmp.json
              mv history.tmp.json history.json
            fi
            # Reset counter
            HOURS=0
          fi

          # Always update status.json with new hoursUp & timestamp
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          jq --arg hours "$HOURS" --arg lastChecked "$NOW" \
            '.hoursUp = ($hours|tonumber) | .lastChecked = $lastChecked' \
            status.json > status.tmp.json
          mv status.tmp.json status.json

      - name: ‚úèÔ∏è Commit & push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add status.json history.json
            git commit -m "chore: hourly uptime update"
            git push
          else
            echo "No changes to commit"
          fi
